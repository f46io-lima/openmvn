image: docker:24.0.2

services:
  - docker:24.0.2-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

stages:
  - build
  - test
  - push

before_script:
  - apk add --no-cache make git go bash curl
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

build_services:
  stage: build
  script:
    - echo "[CI] Building all services"
    - docker-compose -f docker-compose.yml build

unit_tests:
  stage: test
  script:
    - echo "[CI] Running Go unit tests"
    - for d in amf smf upf bss udm ocs; do
        echo "ðŸ”§ Testing $d...";
        cd $d;
        go mod tidy;
        go test ./...;
        cd ..;
      done

health_checks:
  stage: test
  script:
    - echo "[CI] Starting services for health checks"
    - docker-compose -f docker-compose.yml up -d
    - sleep 10
    - echo "[CI] Verifying HTTP APIs"
    - curl -f http://localhost:8081/health
    - curl -f http://localhost:8082/health
    - curl -f http://localhost:8083/health
    - curl -f http://localhost:8084/health
  allow_failure: false
  when: on_success
  after_script:
    - docker-compose down -v

push_images:
  stage: push
  script:
    - echo "[CI] Tagging and pushing all service images"
    - |
      for svc in amf smf upf bss udm ocs; do
        IMAGE="$CI_REGISTRY_IMAGE/$svc:latest"
        docker tag openmvcore_${svc} $IMAGE
        docker push $IMAGE
      done
